#pragma once

#define HTTP_STATUS_LENGTH 3
#define HTTP_STATUS_CODE_MAX_VALUE (sizeof(HTTP_RESPONSE_STATUS_DEFINITION_ARRAY) / sizeof(char *))

typedef enum HTTPStatus {
    HTTP_NO_STATUS = 0,
    HTTP_CONTINUE = 100,
    HTTP_SWITCHING_PROTOCOL = 101,
    HTTP_PROCESSING = 102,
    HTTP_CHECKPOINT = 103,

    HTTP_OK = 200,
    HTTP_CREATED = 201,
    HTTP_ACCEPTED = 202,
    HTTP_NON_AUTHORITATIVE_INFORMATION = 203,
    HTTP_NO_CONTENT = 204,
    HTTP_RESET_CONTENT = 205,
    HTTP_PARTIAL_CONTENT = 206,
    HTTP_MULTI_STATUS = 207,
    HTTP_ALREADY_REPORTED = 208,
    HTTP_IM_USED = 226,

    HTTP_MULTIPLE_CHOICES = 300,
    HTTP_MOVED_PERMANENTLY = 301,
    HTTP_FOUND = 302,
    HTTP_SEE_OTHER = 303,
    HTTP_NOT_MODIFIED = 304,
    HTTP_USE_PROXY = 305,
    HTTP_SWITCH_PROXY = 306,
    HTTP_TEMPORARY_REDIRECT = 307,
    HTTP_PERMANENT_REDIRECT = 308,

    HTTP_BAD_REQUEST = 400,
    HTTP_UNAUTHORIZED = 401,
    HTTP_PAYMENT_REQUIRED = 402,
    HTTP_FORBIDDEN = 403,
    HTTP_NOT_FOUND = 404,
    HTTP_METHOD_NOT_ALLOWED = 405,
    HTTP_NOT_ACCEPTABLE = 406,
    HTTP_PROXY_AUTHENTICATION_REQUIRED = 407,
    HTTP_REQUEST_TIMEOUT = 408,
    HTTP_CONFLICT = 409,
    HTTP_GONE = 410,
    HTTP_LENGTH_REQUIRED = 411,
    HTTP_PRECONDITION_FAILED = 412,
    HTTP_PAYLOAD_TOO_LARGE = 413,
    HTTP_URI_TOO_LONG = 414,
    HTTP_UNSUPPORTED_MEDIA_TYPE = 415,
    HTTP_REQUESTED_RANGE_NOT_SATISFIABLE = 416,
    HTTP_EXPECTATION_FAILED = 417,
    HTTP_I_AM_A_TEAPOT = 418,
    HTTP_METHOD_FAILURE = 420,
    HTTP_MISDIRECTED_REQUEST = 421,
    HTTP_UNPROCESSABLE_ENTITY = 422,
    HTTP_LOCKED = 423,
    HTTP_FAILED_DEPENDENCY = 424,
    HTTP_TOO_EARLY = 425,
    HTTP_UPGRADE_REQUIRED = 426,
    HTTP_PRECONDITION_REQUIRED = 428,
    HTTP_TOO_MANY_REQUESTS = 429,
    HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE = 431,
    HTTP_UNAVAILABLE_FOR_LEGAL_REASONS = 451,

    HTTP_INTERNAL_SERVER_ERROR = 500,
    HTTP_NOT_IMPLEMENTED = 501,
    HTTP_BAD_GATEWAY = 502,
    HTTP_SERVICE_UNAVAILABLE = 503,
    HTTP_GATEWAY_TIMEOUT = 504,
    HTTP_VERSION_NOT_SUPPORTED = 505,
    HTTP_VARIANT_ALSO_NEGOTIATES = 506,
    HTTP_INSUFFICIENT_STORAGE = 507,
    HTTP_LOOP_DETECTED = 508,
    HTTP_BANDWIDTH_LIMIT_EXCEEDED = 509,
    HTTP_NOT_EXTENDED = 510,
    HTTP_NETWORK_AUTHENTICATION_REQUIRED = 511
} HTTPStatus;


static const char *const HTTP_RESPONSE_STATUS_DEFINITION_ARRAY[] = {
        [HTTP_CONTINUE] = "Continue",
        [HTTP_SWITCHING_PROTOCOL] = "Switching protocols",
        [HTTP_PROCESSING] = "Processing",
        [HTTP_CHECKPOINT] = "Early Hints",

        [HTTP_OK] = "OK",
        [HTTP_CREATED] = "Created",
        [HTTP_ACCEPTED] = "Accepted",
        [HTTP_NON_AUTHORITATIVE_INFORMATION] = "Non-Authoritative Information",
        [HTTP_NO_CONTENT] = "No Content",
        [HTTP_RESET_CONTENT] = "Reset Content",
        [HTTP_PARTIAL_CONTENT] = "Partial Content",
        [HTTP_MULTI_STATUS] = "Multi-Status",
        [HTTP_ALREADY_REPORTED] = "Already Reported",
        [HTTP_IM_USED] = "IM Used",

        [HTTP_MULTIPLE_CHOICES] = "Multiple Choices",
        [HTTP_MOVED_PERMANENTLY] = "Moved Permanently",
        [HTTP_FOUND] = "Found",
        [HTTP_SEE_OTHER] = "See Other",
        [HTTP_NOT_MODIFIED] = "Not Modified",
        [HTTP_USE_PROXY] = "Use Proxy",
        [HTTP_SWITCH_PROXY] = "Switch Proxy",
        [HTTP_TEMPORARY_REDIRECT] = "Temporary Redirect",
        [HTTP_PERMANENT_REDIRECT] = "Permanent Redirect",

        [HTTP_BAD_REQUEST] = "Bad Request",
        [HTTP_UNAUTHORIZED] = "Unauthorized",
        [HTTP_PAYMENT_REQUIRED] = "Payment Required",
        [HTTP_FORBIDDEN] = "Forbidden",
        [HTTP_NOT_FOUND] = "Not Found",
        [HTTP_METHOD_NOT_ALLOWED] = "Method Not Allowed",
        [HTTP_NOT_ACCEPTABLE] = "Not Acceptable",
        [HTTP_PROXY_AUTHENTICATION_REQUIRED] = "Proxy Authentication Required",
        [HTTP_REQUEST_TIMEOUT] = "Request Timeout",
        [HTTP_CONFLICT] = "Conflict",
        [HTTP_GONE] = "Gone",
        [HTTP_LENGTH_REQUIRED] = "Length Required",
        [HTTP_PRECONDITION_FAILED] = "Precondition Failed",
        [HTTP_PAYLOAD_TOO_LARGE] = "Payload Too Large",
        [HTTP_URI_TOO_LONG] = "URI Too Long",
        [HTTP_UNSUPPORTED_MEDIA_TYPE] = "Unsupported Media Type",
        [HTTP_REQUESTED_RANGE_NOT_SATISFIABLE] = "Range Not Satisfiable",
        [HTTP_EXPECTATION_FAILED] = "Expectation Failed",
        [HTTP_I_AM_A_TEAPOT] = "I'm a Teapot",
        [HTTP_METHOD_FAILURE] = "Method Failure",
        [HTTP_MISDIRECTED_REQUEST] = "Misdirected Request",

        [HTTP_UNPROCESSABLE_ENTITY] = "Unprocessable Entity",
        [HTTP_LOCKED] = "Locked",
        [HTTP_FAILED_DEPENDENCY] = "Failed Dependency",
        [HTTP_TOO_EARLY] = "Too Early",
        [HTTP_UPGRADE_REQUIRED] = "Upgrade Required",
        [HTTP_PRECONDITION_REQUIRED] = "Precondition Required",
        [HTTP_TOO_MANY_REQUESTS] = "Too Many Requests",
        [HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE] = "Request Header Fields Too Large",
        [HTTP_UNAVAILABLE_FOR_LEGAL_REASONS] = "Unavailable For Legal Reasons",

        [HTTP_INTERNAL_SERVER_ERROR] = "Internal Server Error",
        [HTTP_NOT_IMPLEMENTED] = "Not Implemented",
        [HTTP_BAD_GATEWAY] = "Bad Gateway",
        [HTTP_SERVICE_UNAVAILABLE] = "Service Unavailable",
        [HTTP_GATEWAY_TIMEOUT] = "Gateway Timeout",
        [HTTP_VERSION_NOT_SUPPORTED] = "HTTP Version Not Supported",
        [HTTP_VARIANT_ALSO_NEGOTIATES] = "Variant Also Negotiates",
        [HTTP_INSUFFICIENT_STORAGE] = "Insufficient Storage",
        [HTTP_LOOP_DETECTED] = "Loop Detected",
        [HTTP_BANDWIDTH_LIMIT_EXCEEDED] = "Bandwidth Limit Exceeded",
        [HTTP_NOT_EXTENDED] = "Not Extended",
        [HTTP_NETWORK_AUTHENTICATION_REQUIRED] = "Network Authentication Required"
};

static const char *getHttpStatusCodeMeaning(HTTPStatus httpStatus) {
    if (httpStatus > HTTP_NO_STATUS && httpStatus < HTTP_STATUS_CODE_MAX_VALUE) {
        return HTTP_RESPONSE_STATUS_DEFINITION_ARRAY[httpStatus];
    }
    return NULL;
}